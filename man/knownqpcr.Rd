% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/03_known_ratio.R
\name{knownqpcr}
\alias{knownqpcr}
\title{Estimate auxiliary parameters using the bulk samples with known allele ratios.}
\usage{
knownqpcr(
  A,
  trueY,
  housek0,
  target0,
  housek1,
  target1,
  XInit = c(meanDNA = -10, targetScale = 0, baseChange = 0, sdMeasure = 1, zeroAmount =
    -5, EPCR = 0),
  method = "BFGS",
  pvalue = 0.05,
  trace = 0,
  report = 10,
  quiet = FALSE
)
}
\arguments{
\item{A}{Sample sizes as a numeric vector. It is the counterpart of the \code{N} argument in \code{\link{freqpcr}()}, but an element of \code{A} is not restricted to integer. Considering the case you have arranged the artificial sample solution with arbitrary DNA concentration, it is convenient to determine \code{A} to ensure that the equivalent amount of DNA extracted from an individual is approximately 1. As the concentration in total is also adjusted with the parameter \code{targetScale} (see Value section), this variable should be used exclusively to reflect the differences in relative concentration between samples.}

\item{trueY}{A numeric vector of the same length as \code{A}. \code{trueY[i]} signifies the true frequency of the mutant allele in the \emph{i}th bulk sample. The values must be between 0 and 1.}

\item{housek0, target0, housek1, target1}{Measured Cq values. Numeric vectors having the same length as \code{A} and \code{trueY}. Any of the values should not be duplicated (if so, use \code{\link{knownqpcr_unpaired}()} instead).}

\item{XInit}{A named vector specifying the initial sizes of the auxiliary parameters in the optimization. Defined in the natural log scale; e.g. \code{zeroAmount = -5} corresponds to the residue rate of \code{exp(-5)} = 0.007. It is highly recommended to keep the default values.}

\item{method}{A string specifying the optimization algorithm used in \code{\link[stats]{optim}()}. The default is \code{BFGS}, which is plausible in most situation.}

\item{pvalue}{The two-sided confidence interval is calculated at the last iteration based on the significance level. Default is 0.05, which returns the 95\% CI (2.5 to 97.5 percentile) based on the Hessian matrix.}

\item{trace}{Non-negative integer. If positive, \code{\link[stats]{optim}()} outputs trace information. The default is 0 (no information).}

\item{report}{The frequency of reports if \code{trace} is positive. Defaults to every 10 iterations.}

\item{quiet}{Suppress the output of the function sent to stdout? The default is \code{FALSE}.}
}
\value{
A table containing the estimated values for the following parameters:
\enumerate{
    \item\code{meanDNA} is the template DNA concentration.
    \item\code{targetScale} (\eqn{\delta_{T}}) is the relative template DNA amount of the target to the houskeeping loci.
    \item\code{baseChange} (\eqn{\delta_{B}}) is the change rate in the amount of the internal reference after digestion (in the RED-delta delta Cq method).
    \item\code{sdMeasure} (\eqn{\sigma_{c}}) is the measurement error on each of the four Cq values.
    \item\code{EPCR} (\eqn{\eta}) is the amplification efficiency per PCR cycle.
}
}
\description{
The function to estimate the auxiliary experimental parameters using DNA solutions, where the dataset contains samples with multiple allele mixing ratios (the argument \code{trueY}) and the exact mixing ratio are known for each sample. This function is used when all replicates comprise the observations on the \eqn{2\times2} combinations of the qPCR conditions: (target-gene versus housekeeping-gene) and (undigested or digested with endonuclease). If the combination is not complete, use another function, \code{\link{knownqpcr_unpaired}()}, where you can deal with the situation, for example, only a part of the undigested sample was quantified.
}
\examples{
# A dummy Cq dataset: four mixing ratios (0.1, 0.25, 0.5, 1) with four replicates.
trueY <- c(rep(0.1, 4), rep(0.25, 4), rep(0.5, 4), rep(1, 4))
housek0 <- c( 19.39, 19.78, 19.28, 19.58,  18.95, 19.91, 19.66, 19.96,
              20.05, 19.86, 19.55, 19.61,  19.86, 19.27, 19.59, 20.21 )
target0 <- c( 19.16, 19.08, 19.28, 19.03,  19.17, 19.67, 18.68, 19.52,
              18.92, 18.79, 18.8, 19.28,   19.57, 19.21, 19.05, 19.15 )
housek1 <- c( 21.61, 21.78, 21.25, 21.07,  22.04, 21.45, 20.72, 21.6,
              21.51, 21.27, 21.08, 21.7,   21.44, 21.46, 21.5, 21.8 )
target1 <- c( 24.3, 24.22, 24.13, 24.13,   22.74, 23.14, 23.02, 23.14,
              21.65, 22.62, 22.28, 21.65,  20.83, 20.82, 20.76, 21.3 )
d.cmp <- data.frame(A=rep(1, 16), trueY, housek0, target0, housek1, target1)
print(d.cmp)
p.cmp <- knownqpcr( d.cmp$A, d.cmp$trueY,
                    d.cmp$housek0, d.cmp$target0, d.cmp$housek1, d.cmp$target1 )
}
\seealso{
Other estimation procedures: 
\code{\link{freqpcr}()},
\code{\link{knownqpcr_unpaired}()},
\code{\link{sim_dummy}()}
}
\concept{estimation procedures}
